version: 2

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: sun
    binary: sun
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
      - arm64
      - '386'
    # Exclude some combinations
    ignore:
      - goos: darwin
        goarch: '386'
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    gcflags:
      - all=-trimpath={{.Env.PWD}}
    asmflags:
      - all=-trimpath={{.Env.PWD}}
    tags:
      - netgo
      - osusergo

archives:
  - id: sun-archive
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE*

# Universal binary for macOS (combines Intel + Apple Silicon)
universal_binaries:
  - id: sun-universal
    name_template: 'sun'
    replace: false

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - 'typo'
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: Bug Fixes
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Performance Improvements
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

# Release configuration
release:
  github:
    owner: itsiqbal
    name: sun-cli
  name_template: 'v{{ .Version }}'
  prerelease: auto
  draft: false
  make_latest: true

  # Add standalone binaries as extra files
  extra_files:
    # macOS binaries
    - glob: ./dist/sun_darwin_amd64_v1/sun
      name_template: 'sun-darwin-amd64'
    - glob: ./dist/sun_darwin_arm64/sun
      name_template: 'sun-darwin-arm64'
    - glob: ./dist/sun_darwin_all/sun
      name_template: 'sun-darwin-universal'
    # Linux binaries
    - glob: ./dist/sun_linux_amd64_v1/sun
      name_template: 'sun-linux-amd64'
    - glob: ./dist/sun_linux_arm64/sun
      name_template: 'sun-linux-arm64'
    - glob: ./dist/sun_linux_386/sun
      name_template: 'sun-linux-386'
    # Windows binaries
    - glob: ./dist/sun_windows_amd64_v1/sun.exe
      name_template: 'sun-windows-amd64.exe'
    - glob: ./dist/sun_windows_arm64/sun.exe
      name_template: 'sun-windows-arm64.exe'
    - glob: ./dist/sun_windows_386/sun.exe
      name_template: 'sun-windows-386.exe'

  header: |
    ## Installation

    ### Quick Install (macOS)

    ```bash
    curl -fsSL https://raw.githubusercontent.com/itsiqbal/sun-cli/main/install.sh | sudo bash
    ```

    ### Manual Installation

    #### macOS
    **Apple Silicon (M1/M2/M3/M4):**
    ```bash
    curl -L https://github.com/itsiqbal/sun-cli/releases/download/v{{ .Version }}/sun-darwin-arm64 -o /usr/local/bin/sun
    chmod +x /usr/local/bin/sun
    ```

    **Intel Mac:**
    ```bash
    curl -L https://github.com/itsiqbal/sun-cli/releases/download/v{{ .Version }}/sun-darwin-amd64 -o /usr/local/bin/sun
    chmod +x /usr/local/bin/sun
    ```

    **Universal (works on both):**
    ```bash
    curl -L https://github.com/itsiqbal/sun-cli/releases/download/v{{ .Version }}/sun-darwin-universal -o /usr/local/bin/sun
    chmod +x /usr/local/bin/sun
    ```

    #### Linux
    ```bash
    # AMD64
    curl -L https://github.com/itsiqbal/sun-cli/releases/download/v{{ .Version }}/sun-linux-amd64 -o /usr/local/bin/sun
    chmod +x /usr/local/bin/sun

    # ARM64
    curl -L https://github.com/itsiqbal/sun-cli/releases/download/v{{ .Version }}/sun-linux-arm64 -o /usr/local/bin/sun
    chmod +x /usr/local/bin/sun
    ```

    #### Windows
    Download `sun-windows-amd64.exe` and add to your PATH.

  footer: |
    ## Verify Installation

    ```bash
    sun --version
    sun --help
    ```

    ## Checksums

    Verify your download:
    ```bash
    shasum -a 256 -c sun_{{ .Version }}_checksums.txt
    ```

snapshot:
  name_template: '{{ incpatch .Version }}-next'

metadata:
  mod_timestamp: '{{ .CommitTimestamp }}'
